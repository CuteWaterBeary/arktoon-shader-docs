[{"uri":"https://synqark.github.io/AXCS_Docs/1-quickstart/","title":"クイックスタート","tags":[],"description":"ArxCharacterShaderのダウンロードから最初のマテリアル設定までの流れと、いくつかの設定例を紹介","content":"1.ダウンロード＆インポート BOOTHのページより、最新版をダウンロードし、\nお使いのUnityプロジェクトにインポートしてください 既にArxCharacterShadersが存在する場合、一度プロジェクト上のArxCharacterShadersフォルダを削除の上、 再インポートすることを推奨します。\n 2.マテリアルの設定    マテリアルを作成 シェーダーを ArxCharacterShaders/Opaque に設定 マテリアルインスペクタを開き、Common/Main Texture にテクスチャを設定 メッシュに適用して、完成！  3.少し設定に工夫をしてみる ArxCharacterShadersには様々な機能があります。\nその中の一部をご紹介  陰の設定  ぱきっとセルルックに決まった陰と、柔らかい陰の設定例\n 金属・非金属の塗り分け  ベルトやファスナーなど、メッシュの一部に光沢感が必要な場合の手順\n 半透明の表現例  メッシュに半透明な部分がある場合の設定例\n "},{"uri":"https://synqark.github.io/AXCS_Docs/1-quickstart/1-cel-shading/","title":"陰の設定","tags":[],"description":"ぱきっとセルルックに決まった陰と、柔らかい陰の設定例","content":"アニメチックな（セルルックな）表現の例    シェーダーをArxCharacterShaders/Outline/Opaqueに設定 Outlineカテゴリで以下の設定をする  Width \u0026amp; Mask を 0.1～0.3 Texture \u0026amp; ColorのBase color mixを0.5程度   Shading / Shadowカテゴリで以下の設定をする  Border \u0026amp; RangeのBorderを0.55に、Rangeを0に設定 Default color shadingを0に設定 Custom color shadingのUse textureをオフにし  Hue Shiftを-0.04に設定 Saturationを1.5に設定 Valueを0.825に設定   Ambient Light / Intensityは0.75のまま    柔らめのイラストチックな表現例   上のアニメチックな（セルルックな）表現の例から\nShading / ShadowカテゴリのBorder \u0026amp; RangeのBorderを0.65に、Rangeを0.75に設定すると、\n柔らかいイラストチックな印象になります\n"},{"uri":"https://synqark.github.io/AXCS_Docs/2-variations/","title":"シェーダーのバリエーション","tags":[],"description":"ArxCharacterShadersに含まれているシェーダーの種類を雑に紹介","content":"基本バリエーション ArxCharacterShadersのベースとなるバリエーションです\nArxCharacterShaders/Opaque Opaque = 不透明\n透明・半透明な部分が一切存在しないメッシュの場合、最も効率良く描画できるバリエーションです\nArxCharacterShaders/AlphaCutout アルファ値でカットアウト（切り抜く）バリエーションです\nメッシュが不透明または完全に透明の２パターンで構成されている場合、これを利用してください\nArxCharacterShaders/Fade メッシュに半透明な部分がある場合、こちらのバリエーションを使用してください\nOpaqueやAlphaCutoutと比較し、下記の制約があります\n・Outlineバリエーション(後述)と併用できない\n・他のオブジェクトからの影（落ち影）を受けることができない\n・Fadeを使った別のメッシュや他の半透明オブジェクトが同じ位置にあった場合に、描画に崩れが発生することがある\n ArxCharacterShaders/FadeRefracted 基本的に Fade と同じですが、透けた先を屈折させることができるバリエーションです\n負荷はそこそこ高いため、使う場合は必要最小限に留めてください\nStencilバリエーション 各基本バリエーションにステンシルバッファの操作機能を持たせたバリエーションです\n画面上に存在する見えないレイヤーみたいなもので、メッシュを描画する時にそのバッファを書き換えたり、書き換えた内容を参照したりすることで、\n複数のメッシュをまたいだ複雑な表現をすることができます。\nArxCharacterShaders/_StencilWriter ステンシルバッファを書き換えることのできるバリエーションです\nArxCharacterShaders/_StencilReader ステンシルバッファを参照し、その内容に応じた描画の判断ができるバリエーションです\nEmissiveFreakバリエーション 上記の基本バリエーションとStencilバリエーションの各シェーダーに、様々なカラーエフェクトを設定する機能を持たせたバリエーションです\nArxCharacterShaders/_EmissiveFreak 特定のアニメーションが設定可能な２つのテクスチャを追加で利用できる、特殊バリエーションです\n 色\u0026amp;テクスチャを指定可能 マスクを指定可能（後述のスクロール・深度等のエフェクトの影響を受けない。） 色\u0026amp;テクスチャをスクロール 色\u0026amp;テクスチャに奥行きをつける(Parallaxed Emissionと同じ効果) いくつかの発光エフェクトと、それぞれの適用度を設定可能（ブリージング・ブリンク） カラーシフトアニメーションを設定可能(Hue Shift)  Outlineバリエーション 上記の基本・Stencil・EmissiveFreakの各シェーダーに、メッシュを囲むような外枠（アウトライン）を設定する機能を持たせたバリエーションです Outlineバリエーション以下には処理上の問題でFadeの基本バリエーションは含まれません\n（要望が多い場合は検討します）\n ArxCharacterShaders/_Outline 上で説明した通りの内容です\nここまで説明したFade以外の全てのバリエーションが含まれます\n"},{"uri":"https://synqark.github.io/AXCS_Docs/1-quickstart/2-multimats/","title":"金属・非金属の塗り分け","tags":[],"description":"ベルトやファスナーなど、メッシュの一部に光沢感が必要な場合の手順","content":"金属と布の塗り分け  メッシュ上で金属にあたる部分とそうでない部分を塗り分けるための「マスク」を用意\n（下記の画像サンプルは意図的に解像度を落とし、ぼかし処理を入れています）      マテリアルインスペクタのGlossやReflectionを有効にし、そこに用意したマスクテクスチャを設定 任意にパラメーターを調整してください。細かい説明は各カテゴリページで記載しています  "},{"uri":"https://synqark.github.io/AXCS_Docs/1-quickstart/3-translucents/","title":"半透明の表現例","tags":[],"description":"メッシュに半透明な部分がある場合の設定例","content":"半透明のあるメッシュの表現の例 動画５（メッシュの一部に半透明なところがある）\n シェーダーを Fade のつくものに変更 Common/Main Textureにアルファ情報のあるテクスチャを設定するか、\n色設定ダイアログでアルファ値を変更する  半透明に設定したメッシュを重ねた場合、予期しない描画結果を招く場合があります。fadeを使ったマテリアルは最低限とし、可能な限りAlphaCutoutまたはOpaqueの利用を推奨します。\n "},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/","title":"各カテゴリの機能","tags":[],"description":"ArxCharacterShadersが提供する各機能について、カテゴリ別に詳しく説明","content":"ArxCharacterShadersが提供する各機能について、カテゴリ別に詳しく説明します\n Common / Secondary Common   AlphaMask   Refraction   Alpha Cutout   Shading / Shadow   Details   Outline   Gloss   MatCap   Reflection   Rim   Shade Cap   Stencil Writer / Reader   Parallaxed Emission   Emissive Freak   Proximity Color Override   Advanced / Experimental   Non-Registered Properties   "},{"uri":"https://synqark.github.io/AXCS_Docs/4-forpublishing/","title":"頒布物への当シェーダーの利用について","tags":[],"description":"ArxCharacterShadersを使って作った作品を公開・頒布する際のはなし","content":"ArxCharacterShadersを使って作成したデータを頒布したい 頒布できます\n有償・無償、公開場所、手段に関して、一切の制約はありません\nまた、利用したことの連絡も不要です（くれると喜ぶかもしれません）\nただし当シェーダーを採用して起きた面倒ごとに関して、作者synqarkは一切の面倒も見ず、責任を負うことはありません\n詳しくは ライセンス を確認下さい\n 頒布時に同梱するべきか 不特定多数への公開・頒布（BOOTHへの販売・GitHubへのホスト等） する場合は、\n同梱せず、利用手順でArxCharacterShadersの頒布ページへの誘導と、インポートを促すことを推奨します\n禁止はしません。限定された範囲への公開・頒布（特定のコミュニティやプロジェクトで利用）などでは\n環境に応じて利用しやすい形で頒布してください\n "},{"uri":"https://synqark.github.io/AXCS_Docs/5-license/","title":"ライセンスについて","tags":[],"description":"Unlicenseです。それ以外の情報はありません","content":"ArxCharacterShadersはUnlicenseを採用しています\n詳しくはunitypackage内のREADME.mdまたは下記文をご確認下さい\nUnlicense This is free and unencumbered software released into the public domain. Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means. In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law. THE SOFTWARE IS PROVIDED \u0026#34;AS IS\u0026#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. For more information, please refer to \u0026lt;http://unlicense.org/\u0026gt; 和訳（非公式） 本ソフトウェアは、パブリックドメインで公開されている無料で扱いやすいソフトウェアです。 本ソフトウェアは、商用または非商法を問わずいかなる目的においても、いかなる手段で、ソースコード形式またはコンパイル済みのバイナリを問わず、 誰でも自由に複製、改変、公開、使用、コンパイル、販売、または頒布することができます。 著作権法を認める法域において、本ソフトウェアの著者または著者達は、本ソフトウェアのいかなる、また全ての著作権利権をパブリックドメインに献呈します。 それは公衆の利益に広く貢献し、一方で我々の相続人及び継承者の不利益となります。 この貢献の意図するところは、著作権法に基づき、本ソフトウェアの現在及び未来にわたる全ての権利を永久に放棄することを明らかにするためです。 本ソフトウェアは「現状のまま」提供されており、明示的または黙示的を問わず、 特定の目的に対する商品適格性や適応性、及び非侵害の保証を含むがそれに制限されることなく、いかなる保証も致しません。 著者はいかなる場合も、契約に沿った行為、不法行為、またはその他の行為にかかわらず、 本ソフトウェアの使用または他の扱い方に起因して生じたいかなる請求、損害、またはその他の責任も一切負いません。 更なる情報が必要な場合には、http://unlicense.org/ を参照してください。 "},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/1-common/","title":"Common / Secondary Common","tags":[],"description":"","content":"できること そのマテリアルの基本となる色の設定ができます。\n（※作例画像/gif動画準備中）\n各項目について Main Texture マテリアルの基本色をテクスチャ×カラーで指定します ここで設定された色は影や周囲の色の影響を受けます\nNormal Map マテリアルの凹凸を表現するテクスチャを指定します\nまた指定されたテクスチャの強度をスライダーで設定できます\nEmission マテリアルが発光している色をテクスチャ×カラーで設定します\nここで指定された色は影や周囲の色の影響を受けません\nCull 描画を「しない」面を選択します\n Back：裏面を描画しません（初期状態） None：裏も表も描画します。両面描画です Front：表面を描画しません。使い道は無さそう  Flip backface normal ※ CullがBack以外の時に表示\n裏面の法線を反転します\n両面に設定したいメッシュが光を通さないものの場合にオンにすることで、適切な受光を設定します\nBackface Light intensity ※ CullがBack以外の時に表示\n裏面の受光量を乗算で指定します\nスカートの裏側など、必然的に暗い部分に関して倍率を下げることで自然な表現ができます\nUse backface color shift ※ CullがBack以外の時に表示\n裏面の色をベースカラーから変更したいときに指定します\nZWrite ※ Fade系のバリエーション選択時に表示\n透明に関する設定です。基本的にはONで触る必要がありませんが、\n負荷を考慮したい場合や、ONが意図した透過表現でない場合に変更してみてください。\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/3-alphamask/","title":"AlphaMask","tags":[],"description":"","content":"できること アルファ値にマスクテクスチャを適用できます。\nCommom/Main Textureで指定したテクスチャのアルファ情報が正しければ、本カテゴリを使う必要はありません。 （※作例画像/gif動画準備中）\n各項目について AlphaMask Common/MainTextureで指定した色のアルファ値に乗算するマスクテクスチャを指定します\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/4-refraction/","title":"Refraction","tags":[],"description":"","content":"できること 半透明の億の景色に屈折を与えます\n（※作例画像/gif動画準備中）\n各項目について Fresnel Exp 屈折へのフレネル効果\nメッシュの側面のみを屈折させたい場合にスライダーで設定します\nStrength 屈折の強度を設定します\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/5-alphacutout/","title":"Alpha Cutout","tags":[],"description":"","content":"できること カットアウトとみなすα値を微調整します （※作例画像/gif動画準備中）\n各項目について Cutoff Adjust 透明部分と判断するための値を設定します\nCommon/MainTexture で指定した色のアルファ値が、このスライダーの値より低い場合に透明と判断されます\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/6-shading/","title":"Shading / Shadow","tags":[],"description":"","content":"できること マテリアルの陰に関する調整ができます\n陰の強さだけではなく、陰の諧調、また陰にかかったテクスチャの色などを指定できます\n（※作例画像/gif動画準備中）\n各項目について Border \u0026amp; Range メッシュ上のある地点が「陰」かどうかを決定します 「他のオブジェクトから受ける影（落ち影）」についてはこちらの設定に関係なく受けます\n影を受けたくない場合は、Skinned Mesh RendererのReceive Shadowsのチェックを外してください\n Border 陰の境目となる地点を設定します\n0でメッシュ上から陰が消えます（※落ち影は消えません）\nRange \u0026amp; Mask 陰の境目をどの程度ぼかすかを設定します\nぼけている部分の光～陰の推移は後述のShading Rampで設定します\nRamp in Range Border \u0026amp; Rangeで設定した陰の境目の範囲に対し、\nどのような光の受け方をさせるかを段階的(Ramp)なテクスチャで設定します\nよく分からない場合はRevertボタンをクリックし、ArxCharacterShadersに同梱されている各種Rampテクスチャを割り当ててみてください\n Shadow Receiving ※ Fade以外のバリエーションで表示\n他のオブジェクトから受ける「影（落ち影）」の強度をスライダー＋マスクテクスチャで指定します 落ち影はマテリアルが設定されているオブジェクトのMesh RendererのReceive Shadowsがオンであること、\nSceneに配置されたリアルタイムライトのShadow TypeがHard ShadowsまたはSoft Shadowsであることで発生します\n そもそもメッシュ全体で影を受けたく無い場合は、このスライダーを0にするより\nMesh RendererのReceive Shadowsをオフにすれば低コストに済みます\n Default color shading Strength \u0026amp; Mask Border \u0026amp; Rangeにより決定した陰部分に適用する陰色の強度を設定します\nここで用いられる陰の色は空間の色を重視した無機的なものであるため、\n任意の色を出したい場合は 0 を設定し、後述の Custom color shadingを利用してください\nCustom color shading Border \u0026amp; Rangeにより決定した陰部分に適用する色を直接設定します\nUse Texture 陰用のテクスチャがある場合は、こちらをオンにすることで、テクスチャを設定できます\nテクスチャを使わない場合はHue Shift/Saturation/Valueの各スライダーで\n基本色（Commonで設定した色）から変更した色を陰色として設定します\nAmbient Light Intensity 陰側に空間の色をどの程度加味させるかを設定します\n目に見えた変化はあまりないので、これといった拘りが無い場合は基本的にデフォルトの0.75で良いと思います\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/7-details/","title":"Details","tags":[],"description":"","content":"できること CommonおよびShading（Custom color Shading利用中）で決定された色に対して、\nオーバーレイで追加のテクスチャを指定します。\n基本的にはStandardシェーダーのDetail Mapsと同じ使用方法を想定しています。\n（※作例画像/gif動画準備中）\n各項目について Mask 後述の各種テクスチャを限定的に適用したい場合、Maskテクスチャを設定します\nDetail Map \u0026amp; Detail Map (when shaded) 適用したい詳細テクスチャを設定し、スライダーでその強度を設定できます\nShading / ShadowのCustom color shadingでテクスチャを使っている場合、\nDetail Map (when shaded)にも同じテクスチャを適用するか、陰用の別の詳細テクスチャを適用できます\nNormal Map 適用したい詳細NormalMapを設定し、スライダーでその強度を設定できます\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/8-outline/","title":"Outline","tags":[],"description":"","content":"できること Outlineバリエーションを使っている場合、アウトラインの太さや色をこのカテゴリから指定できます\n（※作例画像/gif動画準備中）\n各項目について Width \u0026amp; Mask アウトラインの幅を指定します\nまた、マスクテクスチャを使うことで太さを部分的に制御できます 太さは頂点単位で決まるため、\n頂点密度の低い箇所に関してはマスクテクスチャ通りの太さの推移にならないことがあります\n Cutoff Mask \u0026amp; Range AlphaCutout系のバリエーションを使っている場合、 アウトラインを描画しない部分をマスクで指定することができます\nTexture \u0026amp; Color アウトラインの色を指定できます\nBase \u0026amp; Shading Mix アウトラインの色に、CommonやShading / Shadowで決定した色をどの程度適用するかを設定します\nUse Color Shift Texture \u0026amp; Color、Base \u0026amp; Shading Mixで決定した色に対してHSV変化を加えたい場合はチェックしてください\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/9-gloss/","title":"Gloss","tags":[],"description":"","content":"できること リアルタイムライトで照らされた部分の「艶」を表現できます\n（※作例画像/gif動画準備中） リアルタイムライトの無いSceneでは本カテゴリの効果そのものが発生しません\n 各項目について Smoothness \u0026amp; Mask 艶の強さを設定します。高いほど光が集まり、強く反射します\nMaskを指定することでメッシュの一部のみ設定が可能です。\nMetallic メタリック感を設定します\n高いほど、メッシュの色が艶に混ざります\nColor 一部の色に対してのみ艶を発生させたい場合に設定します\n使い道はあんまりないと思います\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/10-matcap/","title":"MatCap","tags":[],"description":"","content":"できること メッシュに対して、予め「ライティングされた光源」（＝MaterialCapture,MatCap）となるテクスチャを設定できます\n（※作例画像/gif動画準備中）\n各項目について Blend Mode MatCapで決定した色を基本色にどのように合成するかを設定します\n Unused: この機能を使いません（デフォルト） Add: 既存の色にMatCapの色を加えます（加算） Lighten: 既存の色と比較し、明るい方を表示します（比較(明)） Screen: 既存の色と比較し、スクリーン合成します（逆乗算）  Blend \u0026amp; Mask Blend Modeで設定した方法でどの程度ブレンドするかを設定します\nマスクテクスチャを使うことで、メッシュの部分ごとのブレンドの強度を制御できます\nTexture \u0026amp; Color MatCapとして着色するテクスチャ×色を指定します\nNormal Map mix MatCapを着色する際、CommonやDetailsで設定したNormalMapをどの程度考慮するかをスライダーで指定できます\nShadow mix Shading / Shadowカテゴリで指定した「陰」の部分に効果を反映させたくない場合、\nこのスライダーを設定することで効果を抑制できます\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/11-reflection/","title":"Reflection","tags":[],"description":"","content":"できること メッシュに対して鏡面反射を設定します。\n（※作例画像/gif動画準備中）\n各項目について Use Reflection Probe シーン中のReflection Probeを使用する場合はチェックします\nチェック無し、またはチェックがあってもシーンに存在しない場合はCubemapが使用されます\nSmoothness \u0026amp; Mask 面の「つやつや度」を設定します。高いほど光が集まり、強く反射します\nMaskを指定することでメッシュの部分部分で設定が可能です\nCubemap（Fallback） 反射もととなるCubemapテクスチャを設定します\nUse Reflection Probeがオンの場合は、シーンに存在しない場合に自動的に設定されます\nNormal Map mix リフレクションに対してNormalMapをどの程度考慮するかをスライダーで設定します\nShadow mix 陰影部分にどの程度Reflectionを適用”しない”かをスライダーで指定します\nSuppress Base Color Reflectionの着色に応じてメッシュ基本色を隠す強さをスライダーで設定します\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/12-rim/","title":"Rim","tags":[],"description":"","content":"できること メッシュのリム（ヘリ、枠）に対する光を指定できます（リムライトと呼ばれます）\n（※作例画像/gif動画準備中）\n各項目について Blend Start リム効果を開始する位置を指定します\nスライダーが高いほど、側面に寄ります\nBlend End リム効果が最大になる位置を指定します\nスライダーが高いほど、側面に寄ります\nBlend Startよりも低い値を設定すると、本来とは逆の効果が発生します\nPower type Blend StartからBlend Endまでの推移する式を選択できます\n Linear: 線形に変化します Pow3, Pow5: 変化位置を0～1とした数字に対して、効果をその値の3乗および5乗で計算します\n要するに変化量にイージングがかかったようになります  Blend \u0026amp; Mask リム効果の強さとマスクテクスチャを指定します\nTexture \u0026amp; Color リム効果の色またはテクスチャを指定します\nUse Base Color リム効果に基本色を指定したい場合はチェックします\nShadow mix Shading / Shadowカテゴリで指定した「陰」の部分に効果を反映させたくない場合にスライダーで指定\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/13-shadecap/","title":"Shade Cap","tags":[],"description":"","content":"できること メッシュに対して、予め「ライティングされた陰」テクスチャを設定できます\nMatCapの暗い版です。造語です。\n（※作例画像/gif動画準備中） 近いうちに「Light Shutter」モードをShadingカテゴリに移動して、他の機能を削除する気がします。\n 各項目について Blend Mode ShadeCapで決定した色をどのように混ぜるかを指定します\n Unused: この機能を使いません（デフォルト） Darken: 既存の色と比較し、暗い方を表示します（比較(暗)） Multiply: 既存の色と乗算します Light Shutter: 決定した色を「ライティングの受光方向のマスク」とみなして陰を設定します\nつまり、黒いテクスチャを指定すると、メッシュ全体が陰に入ったようになります  Blend \u0026amp; Mask Blend Modeで設定した方法でどの程度ブレンドするかを設定します\nマスクテクスチャを使うことで、メッシュの部分ごとのブレンドの強度を制御できます\nTexture \u0026amp; Color ShadeCapとして着色するテクスチャ×色を指定します\nLight Shutterを使う場合、白黒テクスチャでない場合に予期しない挙動になるかもしれません\nNormal Map mix ShadeCapを着色する際、CommonやDetailsで設定したNormalMapをどの程度考慮するかをスライダーで指定できます\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/14-stencils/","title":"Stencil Writer / Reader","tags":[],"description":"","content":"Stencil Writer できること ステンシルバッファを書き込むシェーダーです\nStencil Readerや、その他ステンシルを読み取るシェーダーの利用が前提になります。 AXCSのStencilWriter系シェーダーのRenderQueueは一律AlphaTest(2450)です\n 各項目について Stencil Number ステンシルバッファに書き込む値\nStencil Mask \u0026amp; Range メッシュの一部だけステンシルを書き込む場合はマスクテクスチャを指定\nまたスライダーで境界を微調整できます\nAlpha(Dither) ステンシルバッファの透明度を指定します\nステンシル自体に透明度の概念はなく、ディザリング加工で疑似的に半透明を表現します\nStencil Reader 書き込まれているステンシルバッファを読み取り、プロパティで指定した計算結果に基づいて描画の有無を決めて描画します\nStencil Writerまたはその他ステンシル操作系のシェーダーの利用が前提です AXCSのStencilReader系シェーダーのRenderQueueは以下の通りとなっており、\nこれらより前のRenderQueueで描画されたステンシルバッファを参照できます\n・*/_StencilReader/AlphaCutout: AlphaTest + 1 (2451)\n・*/_StencilReader/Fade: Transparent-100 (2900)\n・*/_StencilReader/DoubleFade: Transparent-100 (2900)\n・*/_StencilReader/FadeRefracted: Transparent (3000)\n 各項目について Stencil Number ステンシルバッファとの計算に使う数値を指定します\nCompare Action Stencil Numberで指定した値と、描画地点にあるステンシルバッファを比較する式を指定します\n指定した式が成立する場合に、本マテリアルの描画が実施され、成立しない場合はマテリアルは描画されません\n以下は計算式の一例です\n NotEqual: Stencil Numberの値とバッファの値が異なる場合に描画します Equal: Stencil Numberの値とバッファの値が同じ場合に描画します Always: 常に描画します Never: 常に描画しません Greater: Stencil Numberの値がバッファの値よりも大きい場合に描画します Less: Stencil Numberの値がバッファの値よりも小さい場合に描画します  "},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/15-parallax/","title":"Parallaxed Emission","tags":[],"description":"","content":"できること 視差のあるEmissionテクスチャを貼り付けることができます\n（※作例画像/gif動画準備中）\n各項目について Texture \u0026amp; Color 表示させたいテクスチャと色を指定します\nTexCol Mask Parallaxed Emissionを適用する場所を、マスクテクスチャで指定します\nParallax Depth \u0026amp; Mask 視差の深度を設定します\n正の値だと手前にくるようになり、負の値だと奥に行ったような表現になります\nマスクテクスチャを指定することで、深度に乗算し、メッシュの部分ごとに深度を調節できます\nInvert Depth Mask マスクテクスチャの効果を逆に設定します\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/16-emissivefreak/","title":"Emissive Freak","tags":[],"description":"","content":"できること アニメーション付きのEmissionテクスチャを2枚まで使用できる、特殊カテゴリです （※作例画像/gif動画準備中）\n各項目について Texture \u0026amp; Color 発行させたいテクスチャと色を指定します\nTexCol Mask テクスチャと色にマスクをしたい場合にマスクを指定します\nマスクテクスチャは後述のアニメーションでは動きません\nScroll U U方向のテクスチャスクロール速度を設定します\nScroll V V方向のテクスチャスクロール速度を設定します\nDepth \u0026amp; Mask 視差効果を使う場合、その深度とマスクを設定します\nInvert Depth Mask 深度マスクを逆に設定する場合はチェックします\nBreathing \u0026amp; Mix Texture \u0026amp; Colorの色に対して、じわっと浮かび上がり、じわっと消えるアニメーション設定します（ブリージング効果）\nBlink Out \u0026amp; Mix Texture \u0026amp; Colorの色に対して、突然浮かび、じわっと消えるアニメーションを設定します\nBlink In \u0026amp; Mix Texture \u0026amp; Colorの色に対して、じわっと浮かび、突然消えるアニメーションを設定します\nHue Shift \u0026amp; Mix Texture \u0026amp; Colorの色に対して、色相変更アニメーションを設定します\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/17-proximitycolor/","title":"Proximity Color Override","tags":[],"description":"","content":"できること カメラからの距離に応じて、指定された色または透明度を上書きしていくカテゴリです\n（※作例画像/gif動画準備中）\n各項目について Begin(far) 変色を開始するカメラからの距離を設定します\nEnd(near) 変色を終了する（完全に指定された色になる）カメラからの距離を設定します\nBegin(far)よりも高い値を設定すると、色の遷移が逆転します\nOverride Color 接近時の色をもともとの色からのHSV変換で指定します\nAlpha ※Fade系バリエーションのみ\n接近時の透明度を、もともとの透明度からの乗算で指定します\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/18-advanced/","title":"Advanced / Experimental","tags":[],"description":"","content":"なにこれ？ 使われる頻度が低いか、実験的な機能をこっそり置いていたりしましたが、最近は使われてません\nそのうち消します\n各項目について Vertex Colors メッシュに頂点カラーがある場合、こちらのスライダーを上げることで、\n基本色やEmissiveに色を混ぜることができます\nPointLights 「平行光源ではないリアルタイムライト」から受ける光の陰影の強さ・境界などを設定します\n"},{"uri":"https://synqark.github.io/AXCS_Docs/3-documents/19-nonregistered/","title":"Non-Registered Properties","tags":[],"description":"","content":"なにこれ？ シェーダーのプロパティを独自で追加した場合などは、一旦このカテゴリに出てきます\n改変をしたいときにご利用下さい\n"},{"uri":"https://synqark.github.io/AXCS_Docs/","title":"ArxCharacterShaders ドキュメント","tags":[],"description":"","content":"ArxCharacterShaders のドキュメント 当サイトは、公開中の ArxCharacterShaders (ArxCharacterShadersBOOTH) のマニュアルになります。\nArktoon-Shaders. の使い方は？ こちらになります。\nhttps://synqark.github.io/Arktoon-Shaders-Doc/\nページ一覧  クイックスタート  ArxCharacterShaderのダウンロードから最初のマテリアル設定までの流れと、いくつかの設定例を紹介\n シェーダーのバリエーション  ArxCharacterShadersに含まれているシェーダーの種類を雑に紹介\n 各カテゴリの機能  ArxCharacterShadersが提供する各機能について、カテゴリ別に詳しく説明\n 頒布物への当シェーダーの利用について  ArxCharacterShadersを使って作った作品を公開・頒布する際のはなし\n ライセンスについて  Unlicenseです。それ以外の情報はありません\n 作例に使用しているモデルについて 長兎路こより 様が販売されているオリジナル3Dモデル『レイニィ』ちゃんを作例に利用させていただいております。 大人びた印象を持ちつつもキュートで可愛い子です。\n販売ページはこちらになります。   \n"},{"uri":"https://synqark.github.io/AXCS_Docs/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://synqark.github.io/AXCS_Docs/tags/","title":"Tags","tags":[],"description":"","content":""}]